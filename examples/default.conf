# $Id: default.conf 1022 2007-05-10 21:15:33Z mattias $
#
# Default config for notify, includes all default values.
# 
# Please copy and modify me.
# 
# Notify automatically reloads the config when it is changed, no need to send
# SIGHUP signal etc
#
# TODO:
# Document:
# programs in path?

watch:
    # Paths to watch, can be multiple and you probably want to use absolute
    # paths since match sections later on will be macthed against
    # "watch path + / + path inside watched path"
    #
    # /some/interesting/path
    # /there/can be whitespaces in/them


env:
    # Environment variables to add to executed programs, can also be used
    # in program arguments for matching rules.
    #
    # NOTIFY_MAIL Mr Notify guy <file-changes@orginzation.org>


default:
    # Actions to add to all matching rules which does not define them.
    #
    # event echo got $NOTIFY_EVENT for $NOTIFY_PATH


# /regexp/[options]:
# /^.*/file\.or\.dir$/i:
    # Matching rule, regexp is "^.*/file\.or\.dir$", will match all files or
    # directories named "file.or.dir" case insensitive.
    # Too mach a string containing "abc" anywhere you have to use the
    # regexp ".*abc.*", only "abc" wont work.
    #
    # Options:
    # "i" case insensitive.
    # "d" must be a directory.
    # "f" must be a file.
    #
    # action program arguments...
    #
    # Possible actions are, add, delete, move, close_nowrite, close_write
    # event and stop.
    #
    # add echo path $NOTIFY_PATH was added
    # delete echo path $NOTIFY_PATH was deleted
    # move echo path $NOTIFY_PATH_OLD was moved to $NOTIFY_PATH
    # close_nowrite echo path $NOTIFY_PATH was closed without modifications
    # close_write echo path $NOTIFY_PATH was closed with modifications
    # event echo path $NOTIFY_PATH got event $NOTIFY_EVENT
    # stop
    #
    # Note that add and delete could be because a file was moved from or to a
    # watched path
    #
    # Move is a bit special, $NOTIFY_PATH_OLD and $NOTIFY_PATH will both
    # always be path inside the watched paths and the match regexp
    # is on the destination path ($NOTIFY_PATH), $NOTIFY_PATH_OLD does not
    # need to be matched by any rule.
    #
    # Stop, no matching rules for this rule or other rules below this one will
    # be matched.
    # Can be used to stop infinite loops when executed programs affect
    # paths being watched.
    #
    # Variables can be used in program arguments and will also be available
    # as environment variables for executed programs.
    #
    # In preference order, variables above overrides variables below:
    # $NOTIFY_PATH      Path of current event
    # $NOTIFY_PATH_OLD  Only for move event, where $NOTIFY_PATH was moved from
    # $NOTIFY_EVENT     Event, add, delete, etc...
    # $NOTIFY_DEBUG     Current debug level
    # $NOTIFY_MATCH_1   Regexp match groups, _1, _2 ...
    # All variables defined in env: section
    # All variables exported when starting notify
    #
    # All $VARS must be expanded, if some is missing the event will be
    # ignored.
    #
    # You can use quotes in arugments just like in a shell
    #
    # add echo mail_event.sh "$NOTIFY_PATH was added"
    #
    # If a default: section defines a action you want to ignore in a rule,
    # just define it with no arguments
    # 
    # add
    #


# Most of the options in the this section can be left alone.
config:
    # stdout, default to /dev/null if not running in foreground, else stdout
    # stderr, defailt to /dev/null if not running in foreground, else stderr
    # File to append stderr/stdout to, this is where debug and errors
    # messages will appear.
    #
    # stdout /dev/null
    # stderr /dev/null

    # subprocess_limit, default to 10 processes
    #
    # Limit number of concurrent running forked of processes, when reached
    # process runs will be queued up.
    #
    # subprocess_limit 10

    # subprocess_poll_interval, default to 1 second
    # Interval in which forked of processes will be checked for
    # termination, if you dont care, just leave as it is. 
    #
    # subprocess_poll_interval 1

    # subprocess_stdout, default to /dev/null
    # subprocess_stderr, default to /dev/null
    # File to append stderr/stdout of forked off processes.
    #
    # subprocess_stdout /dev/null
    # subprocess_stderr /dev/null

    # move_event_timeout, default to 0.5 seconds
    # This is probably more then you wanted to know, just leave it
    # alone any you will be fine.
    #
    # This due to how inotify works, timeout time for move from/to events
    # to not consider them as part of same move event.
    # A single "move from" event is same as delete.
    # A single "move to" event is same as add.
    # A pair of matched "move from/to" events within the timeout time
    # is considered as same move.
    # Move only works when both from and to paths are inside watched paths
    #
    # move_event_timeout 0.5
    
    # debug, debug level
    #
    # debug 0

